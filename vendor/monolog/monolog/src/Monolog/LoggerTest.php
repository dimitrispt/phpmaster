<?php

namespace Monolog;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-28 at 10:54:23.
 */
class LoggerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Logger
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Logger;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Monolog\Logger::getName
     * @todo   Implement testGetName().
     */
    public function testGetName() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::pushHandler
     * @todo   Implement testPushHandler().
     */
    public function testPushHandler() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::popHandler
     * @todo   Implement testPopHandler().
     */
    public function testPopHandler() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::pushProcessor
     * @todo   Implement testPushProcessor().
     */
    public function testPushProcessor() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::popProcessor
     * @todo   Implement testPopProcessor().
     */
    public function testPopProcessor() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addRecord
     * @todo   Implement testAddRecord().
     */
    public function testAddRecord() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addDebug
     * @todo   Implement testAddDebug().
     */
    public function testAddDebug() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addInfo
     * @todo   Implement testAddInfo().
     */
    public function testAddInfo() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addNotice
     * @todo   Implement testAddNotice().
     */
    public function testAddNotice() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addWarning
     * @todo   Implement testAddWarning().
     */
    public function testAddWarning() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addError
     * @todo   Implement testAddError().
     */
    public function testAddError() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addCritical
     * @todo   Implement testAddCritical().
     */
    public function testAddCritical() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addAlert
     * @todo   Implement testAddAlert().
     */
    public function testAddAlert() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::addEmergency
     * @todo   Implement testAddEmergency().
     */
    public function testAddEmergency() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::getLevelName
     * @todo   Implement testGetLevelName().
     */
    public function testGetLevelName() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::isHandling
     * @todo   Implement testIsHandling().
     */
    public function testIsHandling() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::debug
     * @todo   Implement testDebug().
     */
    public function testDebug() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::info
     * @todo   Implement testInfo().
     */
    public function testInfo() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::notice
     * @todo   Implement testNotice().
     */
    public function testNotice() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::warn
     * @todo   Implement testWarn().
     */
    public function testWarn() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::err
     * @todo   Implement testErr().
     */
    public function testErr() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::crit
     * @todo   Implement testCrit().
     */
    public function testCrit() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::alert
     * @todo   Implement testAlert().
     */
    public function testAlert() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Monolog\Logger::emerg
     * @todo   Implement testEmerg().
     */
    public function testEmerg() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
